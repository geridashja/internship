"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _events = _interopRequireDefault(require("events"));

var _log_consts = require("./log_consts");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * This is an abstract class that should
 * be extended by custom logger classes.
 *
 * this._log() method must be implemented by them.
 */
class Logger extends _events.default {
  constructor(options) {
    super();
    this.options = options;
  }

  setOptions(options) {
    this.options = _objectSpread(_objectSpread({}, this.options), options);
  }

  getOptions() {
    return this.options;
  }

  _outputWithConsole(level, line) {
    switch (level) {
      case _log_consts.LEVELS.ERROR:
        console.error(line);
        break;

      case _log_consts.LEVELS.WARNING:
        console.warn(line);
        break;

      case _log_consts.LEVELS.DEBUG:
        console.debug(line);
        break;

      default:
        console.log(line);
    }
  }

  _log() {
    throw new Error('log() method must be implemented!');
  }

  log(...args) {
    const line = this._log(...args);

    this.emit('line', line);
  }

}

exports.default = Logger;
module.exports = exports.default;