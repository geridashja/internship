"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _list_dictionary = _interopRequireDefault(require("./list_dictionary"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * The main ListDictionary class.
 */
class LruCache {
  constructor(options) {
    if (typeof options.maxLength !== 'number') throw new Error('Parameter "maxLength" must be a number.');
    this.listDictionary = new _list_dictionary.default();
    this.maxLength = options.maxLength;
  }
  /**
   * Gets the number of item in the list.
   */


  length() {
    return this.listDictionary.length();
  }
  /**
   * Get item from Cache and move to last position
   */


  get(key) {
    if (typeof key !== 'string') throw new Error('Parameter "key" must be a string.');
    const node = this.listDictionary.dictionary[key];
    if (!node) return null; // remove item and move it to the end of the list

    this.listDictionary.remove(key);
    this.listDictionary.add(key, node.data);
    return node.data;
  }
  /**
   * Add new item to cache, remove least used item if length exceeds maxLength
   */


  add(key, value) {
    const added = this.listDictionary.add(key, value);
    if (!added) return false;

    if (this.length() > this.maxLength) {
      this.listDictionary.removeFirst();
    }

    return true;
  }
  /**
   * Remove item with key
   */


  remove(key) {
    return this.listDictionary.remove(key);
  }
  /**
   * Clear cache
   */


  clear() {
    return this.listDictionary.clear();
  }

}

exports.default = LruCache;
module.exports = exports.default;